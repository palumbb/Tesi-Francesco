[2024-10-18 17:34:41,845][flwr][WARNING] - Both server and strategy were provided, ignoring strategy
[2024-10-18 17:34:41,846][flwr][INFO] - Starting Flower simulation, config: num_rounds=3, no round_timeout
[2024-10-18 17:34:50,814][flwr][INFO] - Flower VCE: Ray initialized with resources: {'CPU': 8.0, 'node:__internal_head__': 1.0, 'node:127.0.0.1': 1.0, 'memory': 1178483099.0, 'object_store_memory': 589241548.0}
[2024-10-18 17:34:50,814][flwr][INFO] - Optimize your simulation with Flower VCE: https://flower.ai/docs/framework/how-to-run-simulations.html
[2024-10-18 17:34:50,814][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 4, 'num_gpus': 0.0}
[2024-10-18 17:34:50,838][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 2 actors
[2024-10-18 17:34:50,839][flwr][INFO] - [INIT]
[2024-10-18 17:34:50,839][flwr][INFO] - Requesting initial parameters from one random client
[2024-10-18 17:34:55,935][flwr][ERROR] - Traceback (most recent call last):
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_client_proxy.py", line 94, in _submit_job
    out_mssg, updated_context = self.actor_pool.get_client_result(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 398, in get_client_result
    return self._fetch_future_result(cid)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 279, in _fetch_future_result
    res_cid, out_mssg, updated_context = ray.get(
                                         ^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\worker.py", line 2691, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\worker.py", line 871, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
          ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1137, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'model.binarynet.MulticlassNet'; 'model.binarynet' is not a package

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 134, in _resolve_target
    target = _locate(target)
             ^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\utils.py", line 653, in _locate
    raise ImportError(
ImportError: Error loading 'model.binarynet.MulticlassNet':
ModuleNotFoundError("No module named 'model.binarynet.MulticlassNet'; 'model.binarynet' is not a package")
Are you sure that 'MulticlassNet' is importable from module 'model.binarynet'?

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 57, in run
    out_message = app(message=message, context=context)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 143, in __call__
    return self._call(message, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 126, in ffn
    out_message = handle_legacy_message_from_msgtype(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\message_handler\message_handler.py", line 95, in handle_legacy_message_from_msgtype
    client = client_fn(context)
             ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 67, in adaptor_fn
    return client_fn(str(cid))  # type: ignore
           ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Riccardo\Desktop\PoliMi\Tesi-Francesco\clients\multiclass\client_fedavg.py", line 115, in client_fn
    net = instantiate(model).to(device)
          ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 226, in instantiate
    return instantiate_node(
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 333, in instantiate_node
    _target_ = _resolve_target(node.get(_Keys.TARGET), full_key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 139, in _resolve_target
    raise InstantiationException(msg) from e
hydra.errors.InstantiationException: Error locating target 'model.binarynet.MulticlassNet', set env var HYDRA_FULL_ERROR=1 to see chained exception.
full_key: model

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "python\ray\_raylet.pyx", line 1853, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1954, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1859, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1800, in ray._raylet.execute_task.function_executor
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\function_manager.py", line 696, in actor_method_executor
    return method(__ray_actor, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\util\tracing\tracing_helper.py", line 467, in _resume_span
    return method(self, *_args, **_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 63, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: Error locating target 'model.binarynet.MulticlassNet', set env var HYDRA_FULL_ERROR=1 to see chained exception.
full_key: model

[2024-10-18 17:34:55,963][flwr][ERROR] - [36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
          ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1137, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'model.binarynet.MulticlassNet'; 'model.binarynet' is not a package

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 134, in _resolve_target
    target = _locate(target)
             ^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\utils.py", line 653, in _locate
    raise ImportError(
ImportError: Error loading 'model.binarynet.MulticlassNet':
ModuleNotFoundError("No module named 'model.binarynet.MulticlassNet'; 'model.binarynet' is not a package")
Are you sure that 'MulticlassNet' is importable from module 'model.binarynet'?

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 57, in run
    out_message = app(message=message, context=context)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 143, in __call__
    return self._call(message, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 126, in ffn
    out_message = handle_legacy_message_from_msgtype(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\message_handler\message_handler.py", line 95, in handle_legacy_message_from_msgtype
    client = client_fn(context)
             ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 67, in adaptor_fn
    return client_fn(str(cid))  # type: ignore
           ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Riccardo\Desktop\PoliMi\Tesi-Francesco\clients\multiclass\client_fedavg.py", line 115, in client_fn
    net = instantiate(model).to(device)
          ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 226, in instantiate
    return instantiate_node(
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 333, in instantiate_node
    _target_ = _resolve_target(node.get(_Keys.TARGET), full_key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 139, in _resolve_target
    raise InstantiationException(msg) from e
hydra.errors.InstantiationException: Error locating target 'model.binarynet.MulticlassNet', set env var HYDRA_FULL_ERROR=1 to see chained exception.
full_key: model

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "python\ray\_raylet.pyx", line 1853, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1954, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1859, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1800, in ray._raylet.execute_task.function_executor
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\function_manager.py", line 696, in actor_method_executor
    return method(__ray_actor, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\util\tracing\tracing_helper.py", line 467, in _resume_span
    return method(self, *_args, **_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 63, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: Error locating target 'model.binarynet.MulticlassNet', set env var HYDRA_FULL_ERROR=1 to see chained exception.
full_key: model
[2024-10-18 17:34:55,991][flwr][ERROR] - [36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
          ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1137, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'model.binarynet.MulticlassNet'; 'model.binarynet' is not a package

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 134, in _resolve_target
    target = _locate(target)
             ^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\utils.py", line 653, in _locate
    raise ImportError(
ImportError: Error loading 'model.binarynet.MulticlassNet':
ModuleNotFoundError("No module named 'model.binarynet.MulticlassNet'; 'model.binarynet' is not a package")
Are you sure that 'MulticlassNet' is importable from module 'model.binarynet'?

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 57, in run
    out_message = app(message=message, context=context)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 143, in __call__
    return self._call(message, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 126, in ffn
    out_message = handle_legacy_message_from_msgtype(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\message_handler\message_handler.py", line 95, in handle_legacy_message_from_msgtype
    client = client_fn(context)
             ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 67, in adaptor_fn
    return client_fn(str(cid))  # type: ignore
           ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Riccardo\Desktop\PoliMi\Tesi-Francesco\clients\multiclass\client_fedavg.py", line 115, in client_fn
    net = instantiate(model).to(device)
          ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 226, in instantiate
    return instantiate_node(
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 333, in instantiate_node
    _target_ = _resolve_target(node.get(_Keys.TARGET), full_key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 139, in _resolve_target
    raise InstantiationException(msg) from e
hydra.errors.InstantiationException: Error locating target 'model.binarynet.MulticlassNet', set env var HYDRA_FULL_ERROR=1 to see chained exception.
full_key: model

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "python\ray\_raylet.pyx", line 1853, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1954, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1859, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1800, in ray._raylet.execute_task.function_executor
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\function_manager.py", line 696, in actor_method_executor
    return method(__ray_actor, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\util\tracing\tracing_helper.py", line 467, in _resume_span
    return method(self, *_args, **_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 63, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: Error locating target 'model.binarynet.MulticlassNet', set env var HYDRA_FULL_ERROR=1 to see chained exception.
full_key: model
[2024-10-18 17:34:56,020][flwr][ERROR] - Traceback (most recent call last):
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\app.py", line 339, in start_simulation
    hist = run_fl(
           ^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\server\server.py", line 492, in run_fl
    hist, elapsed_time = server.fit(
                         ^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\server\server.py", line 93, in fit
    self.parameters = self._get_initial_parameters(server_round=0, timeout=timeout)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\server\server.py", line 284, in _get_initial_parameters
    get_parameters_res = random_client.get_parameters(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_client_proxy.py", line 168, in get_parameters
    message_out = self._submit_job(message, timeout)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_client_proxy.py", line 108, in _submit_job
    raise ex
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_client_proxy.py", line 94, in _submit_job
    out_mssg, updated_context = self.actor_pool.get_client_result(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 398, in get_client_result
    return self._fetch_future_result(cid)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 279, in _fetch_future_result
    res_cid, out_mssg, updated_context = ray.get(
                                         ^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\worker.py", line 2691, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\worker.py", line 871, in get_objects
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ClientAppException): [36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
          ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1137, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'model.binarynet.MulticlassNet'; 'model.binarynet' is not a package

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 134, in _resolve_target
    target = _locate(target)
             ^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\utils.py", line 653, in _locate
    raise ImportError(
ImportError: Error loading 'model.binarynet.MulticlassNet':
ModuleNotFoundError("No module named 'model.binarynet.MulticlassNet'; 'model.binarynet' is not a package")
Are you sure that 'MulticlassNet' is importable from module 'model.binarynet'?

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 57, in run
    out_message = app(message=message, context=context)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 143, in __call__
    return self._call(message, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 126, in ffn
    out_message = handle_legacy_message_from_msgtype(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\message_handler\message_handler.py", line 95, in handle_legacy_message_from_msgtype
    client = client_fn(context)
             ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\client\client_app.py", line 67, in adaptor_fn
    return client_fn(str(cid))  # type: ignore
           ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Riccardo\Desktop\PoliMi\Tesi-Francesco\clients\multiclass\client_fedavg.py", line 115, in client_fn
    net = instantiate(model).to(device)
          ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 226, in instantiate
    return instantiate_node(
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 333, in instantiate_node
    _target_ = _resolve_target(node.get(_Keys.TARGET), full_key)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\hydra\_internal\instantiate\_instantiate2.py", line 139, in _resolve_target
    raise InstantiationException(msg) from e
hydra.errors.InstantiationException: Error locating target 'model.binarynet.MulticlassNet', set env var HYDRA_FULL_ERROR=1 to see chained exception.
full_key: model

The above exception was the direct cause of the following exception:

[36mray::ClientAppActor.run()[39m (pid=11204, ip=127.0.0.1, actor_id=00e0e84769d7b6d10dc9032401000000, repr=<flwr.simulation.ray_transport.ray_actor.ClientAppActor object at 0x0000024B32906C50>)
  File "python\ray\_raylet.pyx", line 1853, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1954, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1859, in ray._raylet.execute_task
  File "python\ray\_raylet.pyx", line 1800, in ray._raylet.execute_task.function_executor
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\_private\function_manager.py", line 696, in actor_method_executor
    return method(__ray_actor, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\ray\util\tracing\tracing_helper.py", line 467, in _resume_span
    return method(self, *_args, **_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Riccardo\miniconda3\envs\flower\Lib\site-packages\flwr\simulation\ray_transport\ray_actor.py", line 63, in run
    raise ClientAppException(str(ex)) from ex
flwr.client.client_app.ClientAppException: 
Exception ClientAppException occurred. Message: Error locating target 'model.binarynet.MulticlassNet', set env var HYDRA_FULL_ERROR=1 to see chained exception.
full_key: model

[2024-10-18 17:34:56,050][flwr][ERROR] - Your simulation crashed :(. This could be because of several reasons. The most common are: 
	 > Sometimes, issues in the simulation code itself can cause crashes. It's always a good idea to double-check your code for any potential bugs or inconsistencies that might be contributing to the problem. For example: 
		 - You might be using a class attribute in your clients that hasn't been defined.
		 - There could be an incorrect method call to a 3rd party library (e.g., PyTorch).
		 - The return types of methods in your clients/strategies might be incorrect.
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 4, 'num_gpus': 0.0} is not enough for your run). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 4, 'num_gpus': 0.0}.
Take a look at the Flower simulation examples for guidance <https://flower.ai/docs/framework/how-to-run-simulations.html>.
