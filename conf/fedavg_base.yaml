---
# this is the config that will be loaded as default by main.py
# Please follow the provided structure (this will ensuring all baseline follow
# a similar configuration structure and hence be easy to customise)

federated: True
name: FedAvg
num_clients: 3 # change the proportions of each client in the partition_dataset section
num_epochs: 1
batch_size: 32
clients_per_round: 3
learning_rate: 0.01
num_rounds: 10
partitioning: "uniform"
dataset_path: "./data/car.csv" #also change the input dim
dataset_seed: 42
alpha: 0.5
labels_per_client: 4 # only used when partitioning is label quantity
momentum: 0.9
weight_decay: 0.00001

client_fn:
  _target_: clients.multiclass.client_fedavg.gen_client_fn
  _recursive_: False
  num_epochs: ${num_epochs}
  learning_rate: ${learning_rate}
  momentum: ${momentum}
  weight_decay: ${weight_decay}

dataset:
  # dataset config
  path: ${dataset_path}
  partitioning: ${partitioning}
  batch_size: ${batch_size} # batch_size = batch_size_ratio * total_local_data_size
  train_split: 0.8
  val_split: 0.0
  seed: ${dataset_seed}

model:
  # model config
  _target_: model.multiclassnet.MulticlassNet #change model in the centralized setting
  num_classes: 4
  data: ${dataset_path}
  partitioning: ${partitioning}

strategy:
  _target_: flwr.server.strategy.FedAvg # points to your strategy (either custom or exiting in Flower)
  # rest of strategy config
  fraction_fit: 0.00001 # because we want the number of clients to sample on each round to be solely defined by min_fit_clients
  fraction_evaluate: 0.0
  min_fit_clients: ${clients_per_round}
  min_available_clients: ${clients_per_round}
  min_evaluate_clients: 0

client:
  # client config

server_device: cpu

client_resources:
  num_cpus: 4
  num_gpus: 0.0